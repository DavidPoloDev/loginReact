{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Flia_PoloGarcia\\\\Desktop\\\\sena_projects\\\\src\\\\SignIn.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react'; // Importamos React y el hook useState\nimport { useNavigate } from 'react-router-dom'; // Importamos useNavigate para redireccionar\nimport './signin.css'; // Importamos los estilos CSS\n\n// Componente de inicio de sesión\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignIn = () => {\n  _s();\n  // Hook useNavigate para redireccionar después del login\n  const navigate = useNavigate();\n\n  // Estado para el formulario con valores iniciales vacíos\n  const [form, setForm] = useState({\n    correo_electronico: '',\n    contraseña: ''\n  });\n\n  // Función para manejar cambios en los inputs\n  const handleChange = e => {\n    // Actualiza el estado del formulario usando el nombre del input como clave\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Función para manejar el envío del formulario\n  const handleSubmit = e => {\n    e.preventDefault(); // Evita que la página se recargue\n\n    // Obtiene los usuarios guardados en localStorage o un array vacío si no hay\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n\n    // Busca un usuario que coincida con el correo y contraseña ingresados\n    const match = users.find(u => u.correo_electronico === form.correo_electronico && u.contraseña === form.contraseña);\n\n    // Si encontró un usuario que coincide\n    if (match) {\n      // Guarda el usuario activo en localStorage\n      localStorage.setItem('activeUser', JSON.stringify(match));\n      // Muestra mensaje de éxito\n      alert('Inicio de sesión exitoso');\n      // Redirecciona a la página de tabla\n      navigate('/table');\n    } else {\n      // Muestra mensaje de error si las credenciales son incorrectas\n      alert('Credenciales inválidas');\n    }\n  };\n\n  // Estructura del componente\n  return (\n    /*#__PURE__*/\n    // Contenedor principal\n    _jsxDEV(\"div\", {\n      className: \"signin-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"signin-form\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/img/logo_coffee_background.png\",\n          alt: \"logo\",\n          className: \"header-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\" // Tipo email para validación básica\n          ,\n          name: \"correo_electronico\" // Nombre que debe coincidir con la propiedad en el estado\n          ,\n          placeholder: \"Email\" // Texto de ayuda\n          ,\n          value: form.correo_electronico // Valor controlado por el estado\n          ,\n          onChange: handleChange // Función que maneja los cambios\n          ,\n          required: true // Campo requerido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\" // Tipo password para ocultar los caracteres\n          ,\n          name: \"contrase\\xF1a\" // Nombre que debe coincidir con la propiedad en el estado\n          ,\n          placeholder: \"Password\" // Texto de ayuda\n          ,\n          value: form.contraseña // Valor controlado por el estado\n          ,\n          onChange: handleChange // Función que maneja los cambios\n          ,\n          required: true // Campo requerido\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n// Exportamos el componente para usarlo en otras partes de la aplicación\n_s(SignIn, \"G1mpPS4zvvQTUfrVJ78oLlgI0W0=\", false, function () {\n  return [useNavigate];\n});\n_c = SignIn;\nexport default SignIn;\nvar _c;\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignIn","_s","navigate","form","setForm","correo_electronico","contraseña","handleChange","e","target","name","value","handleSubmit","preventDefault","users","JSON","parse","localStorage","getItem","match","find","u","setItem","stringify","alert","className","children","onSubmit","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/Flia_PoloGarcia/Desktop/sena_projects/src/SignIn.jsx"],"sourcesContent":["import React, { useState } from 'react'; // Importamos React y el hook useState\r\nimport { useNavigate } from 'react-router-dom'; // Importamos useNavigate para redireccionar\r\nimport './signin.css'; // Importamos los estilos CSS\r\n\r\n// Componente de inicio de sesión\r\nconst SignIn = () => {\r\n  // Hook useNavigate para redireccionar después del login\r\n  const navigate = useNavigate();\r\n  \r\n  // Estado para el formulario con valores iniciales vacíos\r\n  const [form, setForm] = useState({ \r\n    correo_electronico: '', \r\n    contraseña: '' \r\n  });\r\n\r\n  // Función para manejar cambios en los inputs\r\n  const handleChange = (e) => {\r\n    // Actualiza el estado del formulario usando el nombre del input como clave\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Función para manejar el envío del formulario\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Evita que la página se recargue\r\n    \r\n    // Obtiene los usuarios guardados en localStorage o un array vacío si no hay\r\n    const users = JSON.parse(localStorage.getItem('users')) || [];\r\n    \r\n    // Busca un usuario que coincida con el correo y contraseña ingresados\r\n    const match = users.find(\r\n      u => u.correo_electronico === form.correo_electronico && \r\n           u.contraseña === form.contraseña\r\n    );\r\n\r\n    // Si encontró un usuario que coincide\r\n    if (match) {\r\n      // Guarda el usuario activo en localStorage\r\n      localStorage.setItem('activeUser', JSON.stringify(match));\r\n      // Muestra mensaje de éxito\r\n      alert('Inicio de sesión exitoso');\r\n      // Redirecciona a la página de tabla\r\n      navigate('/table');\r\n    } else {\r\n      // Muestra mensaje de error si las credenciales son incorrectas\r\n      alert('Credenciales inválidas');\r\n    }\r\n  };\r\n\r\n  // Estructura del componente\r\n  return (\r\n    // Contenedor principal\r\n    <div className=\"signin-container\">\r\n      {/* Formulario de inicio de sesión */}\r\n      <form className=\"signin-form\" onSubmit={handleSubmit}>\r\n        {/* Logo de la aplicación */}\r\n        <img \r\n          src=\"/img/logo_coffee_background.png\" \r\n          alt=\"logo\" \r\n          className=\"header-image\" \r\n        />\r\n        {/* Título del formulario */}\r\n        <h2>Sign In</h2>\r\n        \r\n        {/* Campo para el correo electrónico */}\r\n        <input\r\n          type=\"email\" // Tipo email para validación básica\r\n          name=\"correo_electronico\" // Nombre que debe coincidir con la propiedad en el estado\r\n          placeholder=\"Email\" // Texto de ayuda\r\n          value={form.correo_electronico} // Valor controlado por el estado\r\n          onChange={handleChange} // Función que maneja los cambios\r\n          required // Campo requerido\r\n        />\r\n        \r\n        {/* Campo para la contraseña */}\r\n        <input\r\n          type=\"password\" // Tipo password para ocultar los caracteres\r\n          name=\"contraseña\" // Nombre que debe coincidir con la propiedad en el estado\r\n          placeholder=\"Password\" // Texto de ayuda\r\n          value={form.contraseña} // Valor controlado por el estado\r\n          onChange={handleChange} // Función que maneja los cambios\r\n          required // Campo requerido\r\n        />\r\n        \r\n        {/* Botón para enviar el formulario */}\r\n        <button type=\"submit\">Sign In</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Exportamos el componente para usarlo en otras partes de la aplicación\r\nexport default SignIn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}