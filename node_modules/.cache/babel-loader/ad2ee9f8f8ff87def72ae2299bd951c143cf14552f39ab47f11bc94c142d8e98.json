{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState, useCallback } from 'react';\nexport const useSampleManager = () => {\n  _s();\n  const [samples, setSamples] = useState(() => {\n    const savedSamples = localStorage.getItem('coffeeSamples');\n    return savedSamples ? JSON.parse(savedSamples) : [{\n      id: '0001',\n      quality: 'Pink Bourbon',\n      origin: 'Colombia',\n      date: '2024-07-15',\n      time: '08:00'\n    }, {\n      id: '0002',\n      quality: 'Geisha',\n      origin: 'Colombia',\n      date: '2024-07-15',\n      time: '14:00'\n    }, {\n      id: '0003',\n      quality: 'Tabi',\n      origin: 'Colombia',\n      date: '2024-07-16',\n      time: '10:00'\n    }];\n  });\n  const [filteredSamples, setFilteredSamples] = useState(samples);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editingSample, setEditingSample] = useState(null);\n  const [form, setForm] = useState({\n    id: '',\n    quality: '',\n    origin: '',\n    date: '',\n    time: ''\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const handleSearch = useCallback(term => {\n    setSearchTerm(term);\n    const trimmedTerm = term.toLowerCase().trim();\n    if (!trimmedTerm) {\n      setFilteredSamples(samples);\n    } else {\n      setFilteredSamples(samples.filter(sample => sample.id.toLowerCase().includes(trimmedTerm) || sample.quality.toLowerCase().includes(trimmedTerm) || sample.origin.toLowerCase().includes(trimmedTerm) || sample.date.includes(trimmedTerm)));\n    }\n  }, [samples]);\n  useEffect(() => {\n    localStorage.setItem('coffeeSamples', JSON.stringify(samples));\n    handleSearch(searchTerm);\n  }, [samples, handleSearch, searchTerm]);\n  const openModal = useCallback((mode, index = null) => {\n    if (mode === 'add') {\n      const maxId = Math.max(...samples.map(s => parseInt(s.id, 10)), 0);\n      const newId = String(maxId + 1).padStart(4, '0');\n      setForm({\n        id: newId,\n        quality: '',\n        origin: '',\n        date: new Date().toISOString().split('T')[0],\n        time: ''\n      });\n      setEditingSample(null);\n    } else if (mode === 'edit' && index !== null) {\n      setForm({\n        ...filteredSamples[index]\n      });\n      setEditingSample(index);\n    }\n    setModalOpen(true);\n  }, [filteredSamples, samples]);\n  const closeModal = useCallback(() => {\n    setModalOpen(false);\n  }, []);\n  const handleChange = useCallback(e => {\n    const {\n      id,\n      value\n    } = e.target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [id]: value\n    }));\n  }, []);\n\n  // Enviar formulario (añadir/editar muestra)\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    if (!form.id || !form.quality || !form.origin || !form.date) {\n      alert('Por favor complete todos los campos requeridos');\n      return;\n    }\n    if (editingSample !== null) {\n      const updated = [...samples];\n      const originalIndex = samples.findIndex(s => s.id === filteredSamples[editingSample].id);\n      if (originalIndex !== -1) {\n        updated[originalIndex] = form;\n        setSamples(updated);\n      }\n    } else {\n      if (samples.some(s => s.id === form.id)) {\n        alert('El ID ya existe. Por favor use otro.');\n        return;\n      }\n      setSamples(prevSamples => [...prevSamples, form]);\n    }\n    closeModal();\n  }, [editingSample, filteredSamples, form, samples, closeModal]);\n\n  // Eliminar muestra\n  const deleteSample = useCallback(index => {\n    if (window.confirm('¿Estás seguro de eliminar esta muestra?')) {\n      const toDelete = filteredSamples[index];\n      setSamples(prevSamples => prevSamples.filter(s => s.id !== toDelete.id));\n    }\n  }, [filteredSamples]);\n\n  // Generar PDF\n  const generatePDF = useCallback(() => {\n    try {\n      if (typeof window.jspdf === 'undefined') {\n        alert('La biblioteca jsPDF no está cargada. Por favor, asegúrese de incluirla en su proyecto.');\n        return;\n      }\n      const {\n        jsPDF\n      } = window.jspdf;\n      const doc = new jsPDF();\n      doc.setFontSize(16);\n      doc.text(\"Reporte de Muestras de Café\", 14, 15);\n      doc.setFontSize(10);\n      doc.text(`Generado el: ${new Date().toLocaleString()}`, 14, 22);\n      const columns = [\"ID\", \"Calidad\", \"Origen\", \"Fecha de Catación\", \"Hora\"];\n      const rows = samples.map(sample => [sample.id, sample.quality, sample.origin, sample.date, sample.time]);\n      doc.autoTable({\n        head: [columns],\n        body: rows,\n        startY: 30,\n        headStyles: {\n          fillColor: [75, 46, 46]\n        },\n        alternateRowStyles: {\n          fillColor: [245, 245, 245]\n        }\n      });\n      const finalY = doc.lastAutoTable.finalY || 30;\n      doc.text(`Total de muestras: ${samples.length}`, 14, finalY + 10);\n      doc.save(\"reporte_muestras_cafe.pdf\");\n    } catch (error) {\n      console.error(\"Error al generar el PDF:\", error);\n      alert(\"Ocurrió un error al generar el PDF. Verifica la consola para más detalles.\");\n    }\n  }, [samples]);\n  return {\n    samples,\n    filteredSamples,\n    modalOpen,\n    form,\n    editingSample,\n    handleSearch,\n    openModal,\n    closeModal,\n    handleChange,\n    handleSubmit,\n    deleteSample,\n    generatePDF\n  };\n};\n_s(useSampleManager, \"cxiSLgdBd8Xnadr6T0jJuBLaVgo=\");","map":{"version":3,"names":["useEffect","useState","useCallback","useSampleManager","_s","samples","setSamples","savedSamples","localStorage","getItem","JSON","parse","id","quality","origin","date","time","filteredSamples","setFilteredSamples","modalOpen","setModalOpen","editingSample","setEditingSample","form","setForm","searchTerm","setSearchTerm","handleSearch","term","trimmedTerm","toLowerCase","trim","filter","sample","includes","setItem","stringify","openModal","mode","index","maxId","Math","max","map","s","parseInt","newId","String","padStart","Date","toISOString","split","closeModal","handleChange","e","value","target","prevForm","handleSubmit","preventDefault","alert","updated","originalIndex","findIndex","some","prevSamples","deleteSample","window","confirm","toDelete","generatePDF","jspdf","jsPDF","doc","setFontSize","text","toLocaleString","columns","rows","autoTable","head","body","startY","headStyles","fillColor","alternateRowStyles","finalY","lastAutoTable","length","save","error","console"],"sources":["C:/Users/Flia_PoloGarcia/Desktop/sena_projects/src/hooks/useSampleManager.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\r\n\r\nexport const useSampleManager = () => {\r\n\r\n  const [samples, setSamples] = useState(() => {\r\n\r\n    const savedSamples = localStorage.getItem('coffeeSamples');\r\n    return savedSamples ? JSON.parse(savedSamples) : [\r\n      { id: '0001', quality: 'Pink Bourbon', origin: 'Colombia', date: '2024-07-15', time: '08:00' },\r\n      { id: '0002', quality: 'Geisha', origin: 'Colombia', date: '2024-07-15', time: '14:00' },\r\n      { id: '0003', quality: 'Tabi', origin: 'Colombia', date: '2024-07-16', time: '10:00' }\r\n    ];\r\n  });\r\n  \r\n  const [filteredSamples, setFilteredSamples] = useState(samples);\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [editingSample, setEditingSample] = useState(null);\r\n  const [form, setForm] = useState({ id: '', quality: '', origin: '', date: '', time: '' });\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n\r\n  const handleSearch = useCallback((term) => {\r\n    setSearchTerm(term);\r\n    const trimmedTerm = term.toLowerCase().trim();\r\n    \r\n    if (!trimmedTerm) {\r\n      setFilteredSamples(samples);\r\n    } else {\r\n      setFilteredSamples(samples.filter(sample =>\r\n        sample.id.toLowerCase().includes(trimmedTerm) ||\r\n        sample.quality.toLowerCase().includes(trimmedTerm) ||\r\n        sample.origin.toLowerCase().includes(trimmedTerm) ||\r\n        sample.date.includes(trimmedTerm)\r\n      ));\r\n    }\r\n  }, [samples]);\r\n\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('coffeeSamples', JSON.stringify(samples));\r\n\r\n    handleSearch(searchTerm);\r\n  }, [samples, handleSearch, searchTerm]);\r\n\r\n  const openModal = useCallback((mode, index = null) => {\r\n    if (mode === 'add') {\r\n\r\n      const maxId = Math.max(...samples.map(s => parseInt(s.id, 10)), 0);\r\n      const newId = String(maxId + 1).padStart(4, '0');\r\n      \r\n      setForm({ \r\n        id: newId, \r\n        quality: '', \r\n        origin: '', \r\n        date: new Date().toISOString().split('T')[0], \r\n        time: '' \r\n      });\r\n      setEditingSample(null);\r\n    } else if (mode === 'edit' && index !== null) {\r\n      setForm({...filteredSamples[index]});\r\n      setEditingSample(index);\r\n    }\r\n    setModalOpen(true);\r\n  }, [filteredSamples, samples]);\r\n\r\n  const closeModal = useCallback(() => {\r\n    setModalOpen(false);\r\n  }, []);\r\n\r\n\r\n  const handleChange = useCallback((e) => {\r\n    const { id, value } = e.target;\r\n    setForm(prevForm => ({ ...prevForm, [id]: value }));\r\n  }, []);\r\n\r\n  // Enviar formulario (añadir/editar muestra)\r\n  const handleSubmit = useCallback((e) => {\r\n    e.preventDefault();\r\n\r\n    if (!form.id || !form.quality || !form.origin || !form.date) {\r\n      alert('Por favor complete todos los campos requeridos');\r\n      return;\r\n    }\r\n    \r\n    if (editingSample !== null) {\r\n\r\n      const updated = [...samples];\r\n      const originalIndex = samples.findIndex(s => s.id === filteredSamples[editingSample].id);\r\n      \r\n      if (originalIndex !== -1) {\r\n        updated[originalIndex] = form;\r\n        setSamples(updated);\r\n      }\r\n    } else {\r\n \r\n      if (samples.some(s => s.id === form.id)) {\r\n        alert('El ID ya existe. Por favor use otro.');\r\n        return;\r\n      }\r\n      \r\n\r\n      setSamples(prevSamples => [...prevSamples, form]);\r\n    }\r\n    \r\n    closeModal();\r\n  }, [editingSample, filteredSamples, form, samples, closeModal]);\r\n\r\n  // Eliminar muestra\r\n  const deleteSample = useCallback((index) => {\r\n    if (window.confirm('¿Estás seguro de eliminar esta muestra?')) {\r\n      const toDelete = filteredSamples[index];\r\n      setSamples(prevSamples => prevSamples.filter(s => s.id !== toDelete.id));\r\n    }\r\n  }, [filteredSamples]);\r\n\r\n  // Generar PDF\r\n  const generatePDF = useCallback(() => {\r\n    try {\r\n\r\n      if (typeof window.jspdf === 'undefined') {\r\n        alert('La biblioteca jsPDF no está cargada. Por favor, asegúrese de incluirla en su proyecto.');\r\n        return;\r\n      }\r\n      \r\n      const { jsPDF } = window.jspdf;\r\n      const doc = new jsPDF();\r\n      \r\n\r\n      doc.setFontSize(16);\r\n      doc.text(\"Reporte de Muestras de Café\", 14, 15);\r\n      \r\n\r\n      doc.setFontSize(10);\r\n      doc.text(`Generado el: ${new Date().toLocaleString()}`, 14, 22);\r\n      \r\n\r\n      const columns = [\"ID\", \"Calidad\", \"Origen\", \"Fecha de Catación\", \"Hora\"];\r\n      const rows = samples.map(sample => [\r\n        sample.id, \r\n        sample.quality, \r\n        sample.origin, \r\n        sample.date, \r\n        sample.time\r\n      ]);\r\n      \r\n      doc.autoTable({ \r\n        head: [columns], \r\n        body: rows, \r\n        startY: 30,\r\n        headStyles: { fillColor: [75, 46, 46] },\r\n        alternateRowStyles: { fillColor: [245, 245, 245] }\r\n      });\r\n      \r\n\r\n      const finalY = doc.lastAutoTable.finalY || 30;\r\n      doc.text(`Total de muestras: ${samples.length}`, 14, finalY + 10);\r\n      \r\n\r\n      doc.save(\"reporte_muestras_cafe.pdf\");\r\n    } catch (error) {\r\n      console.error(\"Error al generar el PDF:\", error);\r\n      alert(\"Ocurrió un error al generar el PDF. Verifica la consola para más detalles.\");\r\n    }\r\n  }, [samples]);\r\n\r\n  return {\r\n    samples,\r\n    filteredSamples,\r\n    modalOpen,\r\n    form,\r\n    editingSample,\r\n    handleSearch,\r\n    openModal,\r\n    closeModal,\r\n    handleChange,\r\n    handleSubmit,\r\n    deleteSample,\r\n    generatePDF\r\n  };\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}